# -*- coding: utf-8 -*-
"""edge_detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Es0wN-LjGCL_Y2Ka7xNPedzKibR0jbCP
"""

# 에지 검출
import cv2 as cv

img = cv.imread("soccer.jpg")
gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)

grad_x = cv.Sobel(gray, cv.CV_32F, 1, 0, ksize=3)
grad_y = cv.Sobel(gray, cv.CV_32F, 0, 1, ksize=3)

sobel_x = cv.converScaleAbs(grad_x)
sobel_y = cv.converScaleAbs(grad_y)

edge_strength = cv.addWeighted(sobel_x, 0,5, sobel_y, 0.5, 0)

cv.imshow("Original", gray)
cv.imshow("sobelx", sobel_x)
cv.imshow("sobely", gray)
cv.imshow("edge strength", gray)

cv.waitKey()
cv.destroyAllWindows()

# 캐니 에지
import cv2 as cv

img = vc.imread("soccer.jpg")

gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)

canny1 = cv.Canny(gray, 50, 150)
canny2 = cv.Canny(gray, 100, 200)

cv.imshow("Original", gray)
cv.imshow("Canny1", canny1)
cv.imshow("Canny2", canny2)

cv.waitKey()
cv.destroyAllWindows()

# 직선 검출1
import cv2 as cv
import numpy as np

img = vc.imread("soccer.jpg")
gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)
canny = cv.Canny(gray, 100, 200)

contour, hierarchy = cv.findContours(canny, cv.RETR_LIST, cv.CHAIN_APPROX_NONE)

lcontour=[]
for i in range(len(contour)):
  if contour[i].shape[0] > 100:
    lcontour.append(contour[i])

cv.drawContours(img, lcontour, -1, (0, 255, 0), 3)

cv.imshow("Original with contours", img)
cv.imshow("Canny", canny)

cv.waitKey()
cv.destroyAllWindows()

# 직선 검출2
import cv2 as cv

img = vc.imread("apples.jpg")
gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)

apples = cv.HoughCircles(gray, cv.HOUGH_GRADIENT, 1, 200, param1=150, param2=20, minRadius=50, maxRadius=120)

for i in apples[0]:
  cv.circle(img, (int(i[0]), int(i[1])), int(i[2]), (255,0,0), 2)

cv.imshow ("apples detection", img)

cv.waitKey()
cv.destroyAllWindows()

# 영역 분할
import skimage
import numpy as np
import cv2

img = skimage.data.coffee()
cv.imshow("coffee", cv2.cvtColor(img, cv.COLOR_RGB2BGR))

slic1 = skimage.segmentation.slic(img, compactness=20, n_segments=600)
sp_img1 = skimage.segmentation.mark_boundaries(img, slic1)
sp_img1 = np.uint8(sp_img1*255.0)

slic2 = skimage.segmentation.slic(img, compactness=80, n_segments=600)
sp_img2 = skimage.segmentation.mark_boundaries(img, slic2)
sp_img2 = np.uint8(sp_im2*255.0)

cv2.imshow("slic compact 20", cv2.cvtColor(sp_img1, cv2.COLOR_RGB2BGR))
cv2.imshow("slic compact 80", cv2.cvtColor(sp_img2, cv2.COLOR_RGB2BGR))

cv.waitKey()
cv.destroyAllWindows()

# 최적화 분할
import skimage
import numpy as np
import cv2
import time

img = skimage.data.coffee()

start = time.time()

slic = skimage.segmentation.slic(img, compactness=20, n_segments=600, start_label=1)

g = skimage.future.graph.rag_mean_color(img, slic, mode="similarity")
ncut = skimage.future.graph.cut_normalized(slic, g)
print(img.shape, "image를 분할하는 데", time.time()-start, "초 소요")

marking = skimage.segmentation.mark_boundaries(img, ncut)
ncut_coffee = np.uint8(marking*255.0)

imshow("Normalized cut", cv2.cvtColor(ncut_coffee, cv2.COLOR_BGR2RGB))

cv.waitKey()
cv.destroyAllWindows()

# GrabCut을 이용한 대화식 분활
import skimage
import numpy as np
import cv2
from matplotlib import pyplot as plt

src = skimage.data.coffee()

mask = np.zeros(src.shape[:2], np.uint8)

# 이진 영역의 특징
import skimage
import numpy as np
import cv2

orig = skimage.data.horse()
img = 255 - np.uint8(orig)*255
cv2.imshow("Horse", img)

contours, hierarchy = cv2.findContours(img, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)

img2 = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)
cv2.drawContours(img2, contours, -1, (255, 0, 255), 2)
cv2.imshow("Horse with contour", img2)

contour = contours[0]

m = cv2.moments(contour)
area = cv2.contourArea(contour)
cx, cy = m["m10"]/m["m00"], m["m01"]/m["m10"]
perimeter = cv2.arcLength(contour, True)
roundness = (4.0*np.pi*area)/(perimeter*perimeter)
print("area:", area, f'midpoint({cx}, {cy})', 'perimeter:', perimeter, 'roundness:', roundness)

img3 = cv2.cvtColor(img, cv2.COLOR_GRAY2BGR)

contour_approx = cv2.approxPolyDP(contour, 8, True)
cv2.drawContours(img3, [contour_approx], -1, (0, 255, 0), 2)

hull = cv2.convexHull(contour)
hull = hull.reshape(1, hull.shape[0], hull.shape[2])
cv2.drawContours(img3, hull, -1, (0,0,255), 2)

cv2.imshow("Horse with line", img3)

cv.waitKey()
cv.destroyAllWindows()